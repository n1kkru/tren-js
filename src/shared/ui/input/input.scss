.input {
  cursor: text;

  position: relative;

  display: block;

  padding: 20px 40px;
  border-radius: 20px;
  border: 1px solid var(--borders-lines, #e4e4e4);
  background: var(--Third, #f5f5f5);
  box-shadow: 0 0 12px 0 rgba(0, 0, 0, 0.04) inset;

  transition: border-color $transition;

  color: var(--Second, #000);
  font-size: 24px;
  font-style: normal;
  font-weight: 400;
  line-height: 160%; /* 38.4px */
  letter-spacing: -0.24px;

  @media #{media('>',d)} and (hover: hover) and (pointer: fine) {
    &:hover {
      @apply border-primary;
    }
  }

  @media #{media('<',d)} {
    padding-bottom: 14px;
    border-bottom-width: 2px;

    @apply text-14;
  }

  &:focus-within {
    @apply border-primary;
  }

  &__field {
    display: block;
    width: 100%;
    background: none;

    &::placeholder {
      user-select: none;
      color: #747884;
      transition: opacity $transition-timing-function 0.2s;
    }

    &:focus::placeholder {
      opacity: 0;
    }
  }

  &:has(input:not(:placeholder-shown)),
  &:has(.input__error.visible) {
    @apply border-primary;
  }

  &:has(input[disabled]) {
    pointer-events: none;
    cursor: auto;

    @apply border-gray-light text-secondary;
  }

  &__error {
    pointer-events: none;
    will-change: opacity, transform;

    position: absolute;
    top: calc(100% + 4px);
    transform: translateY(-4px);

    height: fit-content;

    transition:
      opacity,
      transform $transition;

    @apply text-12 text-red;

    &:not(:empty),
    &.visible {
      pointer-events: auto;
      transform: translateY(0);
      opacity: 1;
    }
  }
}

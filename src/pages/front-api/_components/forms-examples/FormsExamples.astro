---
import Form from '@shared/ui/form/form.astro'
import Input from '@shared/ui/input/Input.astro'
import Select from '@shared/ui/select/select.astro'

interface Props {
  class?: string
}

const { class: className, ...props } = Astro.props as Props

export { FormsExamples }
---

<section
  class:list={['forms-examples', className]}
  {...props}
>
  <div class="border border-solid border-gray-400 p-5">
    <h2 class="mb-10 text-center text-2xl font-bold">
      Работа с формами
      <br />
      <span class="text-xl font-normal">window.frontApi.form</span>
    </h2>

    <div class="overflow-x-auto">
      <table class="w-full border-collapse">
        <thead class="bg-gray-100">
          <tr>
            <th class="border border-gray-300 p-3 text-left">Метод</th>
            <th class="border border-gray-300 p-3 text-left">Описание</th>
            <th class="border border-gray-300 p-3 text-left">Параметры</th>
            <th class="border border-gray-300 p-3 text-left">Возвращаемое значение</th>
            <th class="border border-gray-300 p-3 text-left">Пример</th>
          </tr>
        </thead>
        <tbody>
          <!-- Validate Form -->
          <tr class="hover:bg-gray-50">
            <td class="border border-gray-300 p-3 font-bold"
              >window.frontApi.form.validateForm(target)</td
            >
            <td class="border border-gray-300 p-3">
              Принудительная валидация всех полей формы. Показывает ошибки для невалидных полей.
              <div class="mt-2 font-medium text-red">Внимание: вызывает показ ошибок на форме!</div>
            </td>
            <td class="border border-gray-300 p-3">
              <code>target: string | HTMLFormElement</code> - селектор формы или DOM-элемент
            </td>
            <td class="border border-gray-300 p-3">
              <code>boolean</code> - true если все поля валидны, иначе false
            </td>
            <td class="border border-gray-300 p-3">
              <button
                onclick="alert(window.frontApi.form.validateForm('#main-form'))"
                class="w-full rounded-xl border border-solid border-gray-400 border-teal-800 px-4 py-2 text-teal-800 hover:bg-teal-50"
              >
                Вызвать validateForm
              </button>
            </td>
          </tr>

          <!-- isValidForm -->
          <tr class="hover:bg-gray-50">
            <td class="border border-gray-300 p-3 font-bold"
              >window.frontApi.form.isValidForm(target)</td
            >
            <td class="border border-gray-300 p-3">
              Проверяет валидность всех полей формы без показа ошибок.
              <div class="mt-2 font-medium text-green-600">
                Без побочных эффектов - не показывает ошибки
              </div>
            </td>
            <td class="border border-gray-300 p-3">
              <code>target: string | HTMLFormElement</code> - селектор формы или DOM-элемент
            </td>
            <td class="border border-gray-300 p-3">
              <code>boolean</code> - true если все поля валидны, иначе false
            </td>
            <td class="border border-gray-300 p-3">
              <button
                onclick="alert(window.frontApi.form.isValidForm('#main-form'))"
                class="w-full rounded-xl border border-solid border-gray-400 border-teal-800 px-4 py-2 text-teal-800 hover:bg-teal-50"
              >
                Вызвать isValidForm
              </button>
            </td>
          </tr>

          <!-- setFormError -->
          <tr class="hover:bg-gray-50">
            <td class="border border-gray-300 p-3 font-bold"
              >window.frontApi.form.setFormError(target, message, errorEl?)</td
            >
            <td class="border border-gray-300 p-3"
              >Устанавливает общую ошибку формы (не привязанную к конкретному полю)</td
            >
            <td class="border border-gray-300 p-3">
              <ul class="list-disc pl-5">
                <li>
                  <code>target: string | HTMLFormElement</code> - селектор формы или DOM-элемент
                </li>
                <li><code>message: string</code> - текст ошибки</li>
                <li>
                  <code>errorEl?: HTMLElement</code> - (опционально) кастомный элемент для отображения
                  ошибки
                </li>
              </ul>
            </td>
            <td class="border border-gray-300 p-3">void</td>
            <td class="border border-gray-300 p-3">
              <button
                onclick="window.frontApi.form.setFormError('#main-form', 'Произошла ошибка')"
                class="w-full rounded-xl border border-solid border-gray-400 border-teal-800 px-4 py-2 text-teal-800 hover:bg-teal-50"
              >
                Вызвать setFormError
              </button>
            </td>
          </tr>

          <!-- resetFormError -->
          <tr class="hover:bg-gray-50">
            <td class="border border-gray-300 p-3 font-bold"
              >window.frontApi.form.resetFormError(target)</td
            >
            <td class="border border-gray-300 p-3"
              >Сбрасывает общую ошибку формы (установленную через setFormError)</td
            >
            <td class="border border-gray-300 p-3">
              <code>target: string | HTMLFormElement</code> - селектор формы или DOM-элемент
            </td>
            <td class="border border-gray-300 p-3">void</td>
            <td class="border border-gray-300 p-3">
              <button
                onclick="window.frontApi.form.resetFormError('#main-form')"
                class="w-full rounded-xl border border-solid border-gray-400 border-teal-800 px-4 py-2 text-teal-800 hover:bg-teal-50"
              >
                Вызвать resetFormError
              </button>
            </td>
          </tr>

          <!-- resetFormFieldsErrors -->
          <tr class="hover:bg-gray-50">
            <td class="border border-gray-300 p-3 font-bold"
              >window.frontApi.form.resetFormFieldsErrors(target)</td
            >
            <td class="border border-gray-300 p-3">Сбрасывает ВСЕ ошибки полей формы</td>
            <td class="border border-gray-300 p-3">
              <code>target: string | HTMLFormElement</code> - селектор формы или DOM-элемент
            </td>
            <td class="border border-gray-300 p-3">void</td>
            <td class="border border-gray-300 p-3">
              <button
                onclick="window.frontApi.form.resetFormFieldsErrors('#main-form')"
                class="w-full rounded-xl border border-solid border-gray-400 border-teal-800 px-4 py-2 text-teal-800 hover:bg-teal-50"
              >
                Вызвать resetFormFieldsErrors
              </button>
            </td>
          </tr>

          <!-- validateField -->
          <tr class="hover:bg-gray-50">
            <td class="border border-gray-300 p-3 font-bold"
              >window.frontApi.form.validateField(target)</td
            >
            <td class="border border-gray-300 p-3">
              Принудительная валидация конкретного поля формы. Показывает ошибку, если поле
              невалидно.
              <div class="mt-2 font-medium text-red">Показывает ошибку при невалидности</div>
            </td>
            <td class="border border-gray-300 p-3">
              <code>target: string | HTMLInputElement</code> - селектор поля или DOM-элемент
            </td>
            <td class="border border-gray-300 p-3">
              <code>boolean</code> - true если поле валидно, иначе false
            </td>
            <td class="border border-gray-300 p-3">
              <button
                onclick="alert(window.frontApi.form.validateField('#contacts-form4'))"
                class="w-full rounded-xl border border-solid border-gray-400 border-teal-800 px-4 py-2 text-teal-800 hover:bg-teal-50"
              >
                Вызвать validateField
              </button>
            </td>
          </tr>

          <!-- setFormFieldError -->
          <tr class="hover:bg-gray-50">
            <td class="border border-gray-300 p-3 font-bold"
              >window.frontApi.form.setFormFieldError(target, message)</td
            >
            <td class="border border-gray-300 p-3"
              >Устанавливает кастомное сообщение об ошибке для конкретного поля</td
            >
            <td class="border border-gray-300 p-3">
              <ul class="list-disc pl-5">
                <li>
                  <code>target: string | HTMLInputElement</code> - селектор поля или DOM-элемент
                </li>
                <li><code>message: string</code> - текст ошибки</li>
              </ul>
            </td>
            <td class="border border-gray-300 p-3">void</td>
            <td class="border border-gray-300 p-3">
              <button
                onclick="window.frontApi.form.setFormFieldError('#contacts-form4', 'Неверный формат')"
                class="w-full rounded-xl border border-solid border-gray-400 border-teal-800 px-4 py-2 text-teal-800 hover:bg-teal-50"
              >
                Вызвать setFormFieldError
              </button>
            </td>
          </tr>

          <!-- resetFormFieldErrors -->
          <tr class="hover:bg-gray-50">
            <td class="border border-gray-300 p-3 font-bold"
              >window.frontApi.form.resetFormFieldErrors(target)</td
            >
            <td class="border border-gray-300 p-3">Сбрасывает ошибку для конкретного поля</td>
            <td class="border border-gray-300 p-3">
              <code>target: string | HTMLInputElement</code> - селектор поля или DOM-элемент
            </td>
            <td class="border border-gray-300 p-3">void</td>
            <td class="border border-gray-300 p-3">
              <button
                onclick="window.frontApi.form.resetFormFieldErrors('#contacts-form4')"
                class="w-full rounded-xl border border-solid border-gray-400 border-teal-800 px-4 py-2 text-teal-800 hover:bg-teal-50"
              >
                Вызвать resetFormFieldErrors
              </button>
            </td>
          </tr>

          <!-- initAll -->
          <tr class="hover:bg-gray-50">
            <td class="border border-gray-300 p-3 font-bold">window.frontApi.form.initAll()</td>
            <td class="border border-gray-300 p-3">
              Инициализирует или переинициализирует все формы на странице. Полезно при динамическом
              добавлении форм.
            </td>
            <td class="border border-gray-300 p-3">Нет параметров</td>
            <td class="border border-gray-300 p-3">void</td>
            <td class="border border-gray-300 p-3">
              <button
                onclick="window.frontApi.form.initAll()"
                class="w-full rounded-xl border border-solid border-gray-400 border-teal-800 px-4 py-2 text-teal-800 hover:bg-teal-50"
              >
                Вызвать initAll
              </button>
            </td>
          </tr>
        </tbody>
      </table>
    </div>

    <Form
      novalidate
      id={'main-form'}
      class="mt-12 flex flex-col gap-3"
    >
      <div class="flex flex-col gap-12">
        <div class="flex flex-col gap-1">
          <p class="font-bold">Только буквы</p>
          <Input
            id={'contacts-form1'}
            placeholder={'Имя *'}
            name={'fio'}
            data-validate="text-only"
            type={'text'}
            required
          />
        </div>
        <div class="flex flex-col gap-1">
          <p class="font-bold">Только русские буквы</p>
          <Input
            id={'contacts-form2'}
            placeholder={'Имя *'}
            name={'fio'}
            data-validate="text-cyrillic"
            type={'text'}
            required
          />
        </div>
        <div class="flex flex-col gap-1">
          <p class="font-bold">Буквы и цифры</p>
          <Input
            id={'contacts-form3'}
            placeholder={'Никнейм *'}
            name={'nickname'}
            data-validate="text"
            type={'text'}
            required
          />
        </div>
        <div class="flex flex-col gap-1">
          <p class="font-bold">email</p>
          <Input
            id={'contacts-form4'}
            placeholder={'Email *'}
            name={'email'}
            data-validate="email"
            type={'email'}
            required
            minlength="3"
            data-error-message="Неправильный email"
          />
        </div>
        <div class="flex flex-col gap-1">
          <p class="font-bold">Select</p>
          <Select>
            <select
              id="tomSelect1"
              class="js-tomselect w-full"
              data-validate="select"
              required
            >
              <option></option>
              <option value="1">Option 1</option>
              <option value="2">Option 2</option>
            </select>
          </Select>
        </div>
        <div class="flex flex-col gap-1">
          <p class="font-bold">Тут будет кастомный блок для ошибки (выделен верхним регистром)</p>
          <Input
            id={'contacts-form5'}
            placeholder={'Телефон *'}
            name={'tel'}
            data-validate="tel"
            type={'tel'}
            required
            data-error-container="tel-error-container"
          />
          <dir
            class="uppercase text-red"
            data-error-container="tel-error-container"
          ></dir>
        </div>
        <div class="flex flex-col gap-1">
          <p class="font-bold">Положительное число</p>
          <Input
            id={'contacts-form6'}
            placeholder={'Положительное число'}
            name={'positive-number'}
            data-validate="positive-number"
            type={'text'}
          />
        </div>
      </div>

      <button
        class="mx-auto w-fit rounded-xl border border-solid border-gray-400 border-teal-800 px-6 py-3 text-teal-800"
        type="submit"
        >Submit</button
      >
    </Form>
  </div>
</section>

<style>
  @import './forms-examples.scss';
</style>
